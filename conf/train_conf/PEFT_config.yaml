defaults:
  - override hydra/launcher: joblib
  - _self_

hydra :
  mode: MULTIRUN
  sweeper:
    params:
      model:
        Lora_model
      task:
        RNAlocalization_Lora
      embedder:
        nucleotidetransformer



task: RNAlocalization_Lora
embedder: nucleotidetransformer
embedder_obj: None
model: Lora_model
output_dir: ${hydra:runtime.cwd}/../output/${task}/${embedder} #save the path at the task path 
nb_classes: ${Lora_model.model_config.nb_classes}
compartments: ["Nucleus","Exosome","Cytosol","Cytoplasm","Ribosome","Membrane","Endoplasmic reticulum", "Microvesicle", "Mitochondrion"]
loss_weight: False
sample_t: 80 #the thredshold for each class, in overall 100 as filter


RNAlocalization_Lora:
  path: TerminatorJ/localization_multiRNA
wandb:
  project: BERTLocRNA
  name: ${model}


Lora_model:
  _target_: BERTLocRNA.models.Lora_model.LoraModel #All data should input to this model
  lora_config:
    r: 32
    lora_alpha: 64
    target_modules: ["query", "value"]
  model_config:
    nb_classes: 9
    drop_flat: 0.25
    normalizeatt: True
    activation: gelu
    RNA_dim: 4
    pooling_size: ${${embedder}.pool_size}
    hidden_dim: ${${embedder}.hidden_dim}
    RNA_order: ["UNK", "A", "C", "G", "T", "N", "Y RNA", "lincRNA", "lncRNA", "mRNA", "miRNA", "ncRNA", "pseudo", "rRNA", "scRNA", "scaRNA", "snRNA", "snoRNA", "vRNA"]

    

nucleotidetransformer:
  _target_: BERTLocRNA.utils.PEFT.NucleotideTransformerLora
  model_path: InstaDeepAI/nucleotide-transformer-2.5b-multi-species
  batch_size: 32
  dataloader: true
  hidden_dim: 2560
  collator: true
  pool_size: 8
  task: ${task}


Trainer:
  config:
    rna_ref: ["lncRNA", "mRNA", "miRNA", "snRNA", "snoRNA"]
    accelerator: gpu
    strategy: ddp
    max_epochs: 200
    precison: 32
    num_nodes: 1
    log_every_n_steps: 1000
    patience: 10
    gradient_clip: true
    optimizer_cls: torch.optim.Adam
    lr: 0.001
    weight_decay: 1e-5
    nb_classes: ${nb_classes}
    output_dir: ${output_dir} 
    RNA_order: ${${model}.model_config.RNA_order}
    compartments: ${compartments}
